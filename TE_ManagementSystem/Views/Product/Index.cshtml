@model IEnumerable<TE_ManagementSystem.Models.Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_index.cshtml";
}

@*<div class="card-header">
        <div class="row flex-between-end">
            <div class="col-auto align-self-center">
                <h5 class="mb-0" data-anchor="data-anchor" id="table-example">新增儲物<a class="anchorjs-link " aria-label="Anchor" data-anchorjs-icon="#" href="#table-example" style="padding-left: 0.375em;"></a></h5>
                <p>
                    @Html.ActionLink("Create New", "Create")
                </p>
            </div>
        </div>
    </div>*@

<style>

    .overdue {
        background-color: red;
        color: white;
    }

    .notOverdue {
        color: royalblue;
    }

    .inStore {
        color: lightgreen;
    }
</style>

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    @*<h1 class="h3 mb-2 text-black-800">儲物查詢表</h1>*@
    <!-- DataTales Example -->
    <p><a href="/Product/Create">新增</a></p>

    <div class="card shadow mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            治具查詢表
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table class="display nowrap dataTable" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th colspan="7">info</th>
                            <th colspan="9">ME info</th>
                            <th colspan="7">else</th>
                        </tr>
                        <tr>
                            <th>
                                入庫日期
                            </th>
                            <th>
                                治具編號
                            </th>
                            <th>
                                RFID
                            </th>
                            @*<th>
                                    圖片
                                </th>*@
                            <th>
                                狀態
                            </th>
                            <th>
                                逾期
                            </th>
                            <th>
                                治具室位置
                            </th>
                            <th>
                                儲位
                            </th>
                            <th>
                                治具名稱
                            </th>
                            <th>
                                治具種類
                            </th>
                            @*<th>
                                    供應商
                                </th>*@
                            <th>
                                客戶
                            </th>
                            @*<th>
                                    數量
                                </th>
                                <th>
                                    ShiftTime
                                </th>
                                <th>
                                    有鉛
                                </th>*@
                            <th>
                                年限
                            </th>
                            <th>
                                最後借出日期
                            </th>
                            <th>
                                最後歸還日期
                            </th>
                            <th>
                                最後使用日期
                            </th>
                            @*<th>
                                    履歷
                                </th>*@
                            <th>
                                料號
                            </th>
                            <th>
                                備註
                            </th>
                            <th>
                                更新日期
                            </th>
                            <th>
                                更新(創建)人員
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>
<!-- /.container-fluid -->

<script>

    $(document).ready(function () {
        $('#dataTable').DataTable({
            ajax: {
                url: "/Product/GetList",
                type: "POST",
                datatype: "json"
            },
            columns: [
                {
                    data: "StockDate",
                    name: "StockDate",
                    render: function (data, type, row) {
                        if (data !== null) {
                            var timestamp = parseInt(data.substr(6));
                            var date = new Date(timestamp);
                            var options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
                            var formattedDateTime = date.toLocaleString(undefined, options);
                            return '<div>' + formattedDateTime + '</div>';
                        } else {
                            return '<div></div>';
                        }
                    }
                },
                {
                    data: "NumberID",
                    name: "NumberID",
                    render: function (data, type, row) {
                        return '<a href="/Product/Resume/' + data + '">' + data + '</a>';
                    }
                },
                { data: "RFID", name: "RFID" },
                {
                    data: "Status",
                    name: "Status",
                    render: function (data, type, row) {
                        if (data === '借出') {
                            return '<div class="onLend">' + data + '</div>';
                        } else {
                            return '<div>' + data + '</div>';
                        }
                    }
                },
                {
                    data: "Overdue",
                    name: "Overdue",
                    render: function (data, type, row) {
                        if (row.Status === '借出') {
                            if (data === 'true') {
                                return '<div class="overdue">' + '逾期' + '</div>';
                            } else {
                                return '<div class="notOverdue">' + '期限內' + '</div>';
                            }
                        } else {
                            return '<div class="inStore">' + '未借出' + '</div>';
                        }

                    }
                },
                { data: "LocationName", name: "LocationName" },
                { data: "LocationRackPosition", name: "LocationRackPosition" },
                { data: "ProdName", name: "ProdName" },
                { data: "KindName", name: "KindName" },
                { data: "CustomerName", name: "CustomerName" },
                { data: "Life", name: "Life" },
                {
                    data: "LastBorrowDate",
                    name: "LastBorrowDate",
                    render: function (data, type, row) {
                        if (data !== null) {
                            var timestamp = parseInt(data.substr(6));
                            var date = new Date(timestamp);
                            var options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
                            var formattedDateTime = date.toLocaleString(undefined, options);
                            return '<div>' + formattedDateTime + '</div>';
                        } else {
                            return '<div></div>';
                        }
                    }
                },
                {
                    data: "LastReturnDate",
                    name: "LastReturnDate",
                    render: function (data, type, row) {
                        if (data !== null) {
                            var timestamp = parseInt(data.substr(6));
                            var date = new Date(timestamp);
                            var options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
                            var formattedDateTime = date.toLocaleString(undefined, options);
                            return '<div>' + formattedDateTime + '</div>';
                        } else {
                            return '<div></div>';
                        }
                    }
                },
                {
                    data: "UseLastDate",
                    name: "UseLastDate",
                    render: function (data, type, row) {
                        if (data !== null) {
                            var timestamp = parseInt(data.substr(6));
                            var date = new Date(timestamp);
                            var options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
                            var formattedDateTime = date.toLocaleString(undefined, options);
                            return '<div>' + formattedDateTime + '</div>';
                        } else {
                            return '<div></div>';
                        }
                    }
                },
                { data: "ComList", name: "ComList" },
                { data: "Spare1", name: "Spare1" },
                {
                    data: "UpdateDate",
                    name: "UpdateDate",
                    render: function (data, type, row) {
                        if (data !== null) {
                            var timestamp = parseInt(data.substr(6));
                            var date = new Date(timestamp);
                            var options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
                            var formattedDateTime = date.toLocaleString(undefined, options);
                            return '<div>' + formattedDateTime + '</div>';
                        } else {
                            return '<div></div>';
                        }
                    }
                },
                { data: "UpdateEmployee", name: "UpdateEmployee" },
                {
                    data: "NumberID",
                    name: "NumberID",
                    render: function (data, type, row) {
                        if (data.length === 8) {
                            return '<a href="/Product/Edit/' + data + '">Edit</a>';
                        } else {
                            return '<a href="/Product/OldEdit/' + data + '">Edit</a>';
                        }
                    }
                }
            ],
            pagingType: 'full_numbers',
            order: [0, 'desc'],
            serverSide: true,
            processing: true,
            language: {
                processing: "processing...please wait."
            },
            lengthMenu: [
                [50, 25, 10,100],
                [50, 25, 10,100],
            ],
            scrollY: '400px',
            scrollX: true,
            scrollCollapse: true
        });
    });

</script>


